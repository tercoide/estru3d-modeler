' Gambas module file

Public Struct settingST
    LastOpen1 As String
    LastOpen2 As String
    LastOpen3 As String
    LastOpen4 As String
    LastOpen5 As String
End Struct

Public Setting As New SettingST
Public Params As Settings

'Dirs
Public dirDwgIn As String = User.Home &/ ".config/m-designer/DwgIn"
Public dirDxfIn As String = User.Home &/ ".config/m-designer/DxfIn"
Public dirDwgOut As String = User.Home &/ ".config/m-designer/DwgOut"
Public dirDxfOut As String = User.Home &/ ".config/m-designer/DxfOut"
Public dirTemplates As String = User.Home &/ ".config/m-designer/templates"
Public dirBlocks As String      ' path to Blocks

' file conversion
Public convLibreDWG As Boolean
Public convODA As Boolean

Public Sub main()

    ' leo la configuracion inicial
    Config.Load()

    ' Inicializo el programa
    Initialize          ' general init
    InitColors          ' CAD color init
    ' InitButtons         ' fMain buttons
    InitMenus           ' fMain menus

    gcd.Main            ' drawing specific init

    ' armo el combo de colores
    fLayersOnScreen.Run
    fMain.Run

End

Public Sub Initialize()

    Dim aFile As String

    ' Dirs
    If Not IsDir(User.Home &/ ".config/m-designer") Then            ' first timer
        Mkdir User.Home &/ ".config/m-designer"
        Mkdir dirDwgIn       ' DWG to be converted by ODA
        Mkdir dirDxfIn       ' where ODA puts the converted DWG into DXF
        Mkdir dirDxfOut      ' drawings saved into DXF prior to be converted back to DWG
        Mkdir dirDwgOut     ' where ODA puts the converted DXF into DWG, prior to final destination
        Mkdir dirTemplates
        ' Copio lo templates
        For Each aFile In Dir(Application.Path &/ "minimal")
            Copy Application.Path &/ "minimal/" &/ afile To dirTemplates &/ aFile
        Next

    Else                    ' empty temporary files in case there are any

        For Each aFile In Dir(dirDwgIn)
            Kill dirDwgIn &/ aFile
        Next
        For Each aFile In Dir(dirDxfIn)
            Kill dirDxfIn &/ aFile
        Next
        For Each aFile In Dir(dirDwgOut)
            Kill dirDwgOut &/ aFile
        Next
        For Each aFile In Dir(dirDxfOut)
            Kill dirDxfOut &/ aFile
        Next

    End If

    ' External programs availability
    ' libredwg
    If Exist("/usr/local/lib/libredwg.so") Then convLibreDWG = True

    ' ODA
    If Exist("/usr/bin/ODAFileConverter") Then convODA = True

    Params = New Settings(User.Home &/ ".config/m-designer/m-designer.conf", "Parameters")

    Select Params["/DrawingArea/DarkMode", True]

        Case False
            gcd.flgWindowBackColor = Color.White
            gcd.flgWindowInfoColor = &HFFFF00
            gcd.flgWindowTextColor = Color.Blue
            gcd.flgWindowCursorColor = Color.Black
            gcd.flgWhiteAndBlack = Color.Black

        Case True
            gcd.flgWindowBackColor = Color.Black
            gcd.flgWindowInfoColor = &HA0A000
            gcd.flgWindowTextColor = Color.Yellow
            gcd.flgWindowCursorColor = Color.White
            gcd.flgWhiteAndBlack = Color.White

    End Select

    If Params["/FileConversion"] = "ODA" Then
        If convODA Then
            'nothing
        Else If convLibreDWG Then

            Params["/FileConversion"] = "LibreDWG"
        Else
            ' none available
            Params["/FileConversion"] = ""

        Endif
    Else If Params["/FileConversion"] = "LibreDWG" Then
        If convLibreDWG Then
            'nothing
        Else If convODA Then

            Params["/FileConversion"] = "ODA"
        Else
            ' none available
            Params["/FileConversion"] = ""

        Endif
    Else    ' none selected
        If convODA Then

            Params["/FileConversion"] = "ODA"
        Else If convLibreDWG Then

            Params["/FileConversion"] = "LibreDWG"
        Endif
    Endif

    dirBlocks = Params["/Blocks/LibraryPath", Application.Path &/ "library"]
    fMain.DirView1.Root = dirBlocks

End

Public Sub Terminate()

    Dim d As Drawing
    Dim e As Entity
    Dim L As Layer

    For Each d In gcd.Drawings
        For Each e In d.oEntities
            e.Polygon.Clear
            e.P.Clear
            e.Psel.Clear
            e.PolyLine.Clear
            e.PoiPoints.Clear
            e.StringData.Clear
            e.fParam.Clear
            e.iParam.Clear
            e.ClassHandler = Null
            e.PoiType.Clear
            gl.DeleteLists(e.glDrwList, 1)
            gl.DeleteLists(e.glDrwListSel, 1)
            gl.DeleteLists(e.glDrwListPOI, 1)
        Next
        d.oEntities.Clear
        d.oBlocks.Clear
        d.cModel.Clear
        For Each L In d.oLayers
            L.Entities.Clear
        Next
        d.oLayers.Clear
        d.oLTYpes.Clear
        d.oVisibleEntities.Clear
        d.oStyles.Clear
    Next

    Params.Save
    Config.Save()

End

Private Sub InitColors()
    ' Load CAD color into Gambas colors
    ' array index is CAD color, returning Gambas int color

    gcd.gcolor.add(color.rgb(0, 0, 0))
    gcd.gcolor.add(color.rgb(255, 0, 0))
    gcd.gcolor.add(color.rgb(255, 255, 0))
    gcd.gcolor.add(color.rgb(0, 255, 0))
    gcd.gcolor.add(color.rgb(0, 255, 255))
    gcd.gcolor.add(color.rgb(0, 0, 255))
    gcd.gcolor.add(color.rgb(255, 0, 255))
    gcd.gcolor.add(color.rgb(255, 255, 255))
    gcd.gcolor.add(color.rgb(128, 128, 128))
    gcd.gcolor.add(color.rgb(192, 192, 192))
    gcd.gcolor.add(color.rgb(255, 0, 0))
    gcd.gcolor.add(color.rgb(255, 127, 127))
    gcd.gcolor.add(color.rgb(165, 0, 0))
    gcd.gcolor.add(color.rgb(165, 82, 82))
    gcd.gcolor.add(color.rgb(127, 0, 0))
    gcd.gcolor.add(color.rgb(127, 63, 63))
    gcd.gcolor.add(color.rgb(76, 0, 0))
    gcd.gcolor.add(color.rgb(76, 38, 38))
    gcd.gcolor.add(color.rgb(38, 0, 0))
    gcd.gcolor.add(color.rgb(38, 19, 19))
    gcd.gcolor.add(color.rgb(255, 63, 0))
    gcd.gcolor.add(color.rgb(255, 159, 127))
    gcd.gcolor.add(color.rgb(165, 41, 0))
    gcd.gcolor.add(color.rgb(165, 103, 82))
    gcd.gcolor.add(color.rgb(127, 31, 0))
    gcd.gcolor.add(color.rgb(127, 79, 63))
    gcd.gcolor.add(color.rgb(76, 19, 0))
    gcd.gcolor.add(color.rgb(76, 47, 38))
    gcd.gcolor.add(color.rgb(38, 9, 0))
    gcd.gcolor.add(color.rgb(38, 23, 19))
    gcd.gcolor.add(color.rgb(255, 127, 0))
    gcd.gcolor.add(color.rgb(255, 191, 127))
    gcd.gcolor.add(color.rgb(165, 82, 0))
    gcd.gcolor.add(color.rgb(165, 124, 82))
    gcd.gcolor.add(color.rgb(127, 63, 0))
    gcd.gcolor.add(color.rgb(127, 95, 63))
    gcd.gcolor.add(color.rgb(76, 38, 0))
    gcd.gcolor.add(color.rgb(76, 57, 38))
    gcd.gcolor.add(color.rgb(38, 19, 0))
    gcd.gcolor.add(color.rgb(38, 28, 19))
    gcd.gcolor.add(color.rgb(255, 191, 0))
    gcd.gcolor.add(color.rgb(255, 223, 127))
    gcd.gcolor.add(color.rgb(165, 124, 0))
    gcd.gcolor.add(color.rgb(165, 145, 82))
    gcd.gcolor.add(color.rgb(127, 95, 0))
    gcd.gcolor.add(color.rgb(127, 111, 63))
    gcd.gcolor.add(color.rgb(76, 57, 0))
    gcd.gcolor.add(color.rgb(76, 66, 38))
    gcd.gcolor.add(color.rgb(38, 28, 0))
    gcd.gcolor.add(color.rgb(38, 33, 19))
    gcd.gcolor.add(color.rgb(255, 255, 0))
    gcd.gcolor.add(color.rgb(255, 255, 127))
    gcd.gcolor.add(color.rgb(165, 165, 0))
    gcd.gcolor.add(color.rgb(165, 165, 82))
    gcd.gcolor.add(color.rgb(127, 127, 0))
    gcd.gcolor.add(color.rgb(127, 127, 63))
    gcd.gcolor.add(color.rgb(76, 76, 0))
    gcd.gcolor.add(color.rgb(76, 76, 38))
    gcd.gcolor.add(color.rgb(38, 38, 0))
    gcd.gcolor.add(color.rgb(38, 38, 19))
    gcd.gcolor.add(color.rgb(191, 255, 0))
    gcd.gcolor.add(color.rgb(223, 255, 127))
    gcd.gcolor.add(color.rgb(124, 165, 0))
    gcd.gcolor.add(color.rgb(145, 165, 82))
    gcd.gcolor.add(color.rgb(95, 127, 0))
    gcd.gcolor.add(color.rgb(111, 127, 63))
    gcd.gcolor.add(color.rgb(57, 76, 0))
    gcd.gcolor.add(color.rgb(66, 76, 38))
    gcd.gcolor.add(color.rgb(28, 38, 0))
    gcd.gcolor.add(color.rgb(33, 38, 19))
    gcd.gcolor.add(color.rgb(127, 255, 0))
    gcd.gcolor.add(color.rgb(191, 255, 127))
    gcd.gcolor.add(color.rgb(82, 165, 0))
    gcd.gcolor.add(color.rgb(124, 165, 82))
    gcd.gcolor.add(color.rgb(63, 127, 0))
    gcd.gcolor.add(color.rgb(95, 127, 63))
    gcd.gcolor.add(color.rgb(38, 76, 0))
    gcd.gcolor.add(color.rgb(57, 76, 38))
    gcd.gcolor.add(color.rgb(19, 38, 0))
    gcd.gcolor.add(color.rgb(28, 38, 19))
    gcd.gcolor.add(color.rgb(63, 255, 0))
    gcd.gcolor.add(color.rgb(159, 255, 127))
    gcd.gcolor.add(color.rgb(41, 165, 0))
    gcd.gcolor.add(color.rgb(103, 165, 82))
    gcd.gcolor.add(color.rgb(31, 127, 0))
    gcd.gcolor.add(color.rgb(79, 127, 63))
    gcd.gcolor.add(color.rgb(19, 76, 0))
    gcd.gcolor.add(color.rgb(47, 76, 38))
    gcd.gcolor.add(color.rgb(9, 38, 0))
    gcd.gcolor.add(color.rgb(23, 38, 19))
    gcd.gcolor.add(color.rgb(0, 255, 0))
    gcd.gcolor.add(color.rgb(127, 255, 127))
    gcd.gcolor.add(color.rgb(0, 165, 0))
    gcd.gcolor.add(color.rgb(82, 165, 82))
    gcd.gcolor.add(color.rgb(0, 127, 0))
    gcd.gcolor.add(color.rgb(63, 127, 63))
    gcd.gcolor.add(color.rgb(0, 76, 0))
    gcd.gcolor.add(color.rgb(38, 76, 38))
    gcd.gcolor.add(color.rgb(0, 38, 0))
    gcd.gcolor.add(color.rgb(19, 38, 19))
    gcd.gcolor.add(color.rgb(0, 255, 63))
    gcd.gcolor.add(color.rgb(127, 255, 159))
    gcd.gcolor.add(color.rgb(0, 165, 41))
    gcd.gcolor.add(color.rgb(82, 165, 103))
    gcd.gcolor.add(color.rgb(0, 127, 31))
    gcd.gcolor.add(color.rgb(63, 127, 79))
    gcd.gcolor.add(color.rgb(0, 76, 19))
    gcd.gcolor.add(color.rgb(38, 76, 47))
    gcd.gcolor.add(color.rgb(0, 38, 9))
    gcd.gcolor.add(color.rgb(19, 38, 23))
    gcd.gcolor.add(color.rgb(0, 255, 127))
    gcd.gcolor.add(color.rgb(127, 255, 191))
    gcd.gcolor.add(color.rgb(0, 165, 82))
    gcd.gcolor.add(color.rgb(82, 165, 124))
    gcd.gcolor.add(color.rgb(0, 127, 63))
    gcd.gcolor.add(color.rgb(63, 127, 95))
    gcd.gcolor.add(color.rgb(0, 76, 38))
    gcd.gcolor.add(color.rgb(38, 76, 57))
    gcd.gcolor.add(color.rgb(0, 38, 19))
    gcd.gcolor.add(color.rgb(19, 38, 28))
    gcd.gcolor.add(color.rgb(0, 255, 191))
    gcd.gcolor.add(color.rgb(127, 255, 223))
    gcd.gcolor.add(color.rgb(0, 165, 124))
    gcd.gcolor.add(color.rgb(82, 165, 145))
    gcd.gcolor.add(color.rgb(0, 127, 95))
    gcd.gcolor.add(color.rgb(63, 127, 111))
    gcd.gcolor.add(color.rgb(0, 76, 57))
    gcd.gcolor.add(color.rgb(38, 76, 66))
    gcd.gcolor.add(color.rgb(0, 38, 28))
    gcd.gcolor.add(color.rgb(19, 38, 33))
    gcd.gcolor.add(color.rgb(0, 255, 255))
    gcd.gcolor.add(color.rgb(127, 255, 255))
    gcd.gcolor.add(color.rgb(0, 165, 165))
    gcd.gcolor.add(color.rgb(82, 165, 165))
    gcd.gcolor.add(color.rgb(0, 127, 127))
    gcd.gcolor.add(color.rgb(63, 127, 127))
    gcd.gcolor.add(color.rgb(0, 76, 76))
    gcd.gcolor.add(color.rgb(38, 76, 76))
    gcd.gcolor.add(color.rgb(0, 38, 38))
    gcd.gcolor.add(color.rgb(19, 38, 38))
    gcd.gcolor.add(color.rgb(0, 191, 255))
    gcd.gcolor.add(color.rgb(127, 223, 255))
    gcd.gcolor.add(color.rgb(0, 124, 165))
    gcd.gcolor.add(color.rgb(82, 145, 165))
    gcd.gcolor.add(color.rgb(0, 95, 127))
    gcd.gcolor.add(color.rgb(63, 111, 127))
    gcd.gcolor.add(color.rgb(0, 57, 76))
    gcd.gcolor.add(color.rgb(38, 66, 76))
    gcd.gcolor.add(color.rgb(0, 28, 38))
    gcd.gcolor.add(color.rgb(19, 33, 38))
    gcd.gcolor.add(color.rgb(0, 127, 255))
    gcd.gcolor.add(color.rgb(127, 191, 255))
    gcd.gcolor.add(color.rgb(0, 82, 165))
    gcd.gcolor.add(color.rgb(82, 124, 165))
    gcd.gcolor.add(color.rgb(0, 63, 127))
    gcd.gcolor.add(color.rgb(63, 95, 127))
    gcd.gcolor.add(color.rgb(0, 38, 76))
    gcd.gcolor.add(color.rgb(38, 57, 76))
    gcd.gcolor.add(color.rgb(0, 19, 38))
    gcd.gcolor.add(color.rgb(19, 28, 38))
    gcd.gcolor.add(color.rgb(0, 63, 255))
    gcd.gcolor.add(color.rgb(127, 159, 255))
    gcd.gcolor.add(color.rgb(0, 41, 165))
    gcd.gcolor.add(color.rgb(82, 103, 165))
    gcd.gcolor.add(color.rgb(0, 31, 127))
    gcd.gcolor.add(color.rgb(63, 79, 127))
    gcd.gcolor.add(color.rgb(0, 19, 76))
    gcd.gcolor.add(color.rgb(38, 47, 76))
    gcd.gcolor.add(color.rgb(0, 9, 38))
    gcd.gcolor.add(color.rgb(19, 23, 38))
    gcd.gcolor.add(color.rgb(0, 0, 255))
    gcd.gcolor.add(color.rgb(127, 127, 255))
    gcd.gcolor.add(color.rgb(0, 0, 165))
    gcd.gcolor.add(color.rgb(82, 82, 165))
    gcd.gcolor.add(color.rgb(0, 0, 127))
    gcd.gcolor.add(color.rgb(63, 63, 127))
    gcd.gcolor.add(color.rgb(0, 0, 76))
    gcd.gcolor.add(color.rgb(38, 38, 76))
    gcd.gcolor.add(color.rgb(0, 0, 38))
    gcd.gcolor.add(color.rgb(19, 19, 38))
    gcd.gcolor.add(color.rgb(63, 0, 255))
    gcd.gcolor.add(color.rgb(159, 127, 255))
    gcd.gcolor.add(color.rgb(41, 0, 165))
    gcd.gcolor.add(color.rgb(103, 82, 165))
    gcd.gcolor.add(color.rgb(31, 0, 127))
    gcd.gcolor.add(color.rgb(79, 63, 127))
    gcd.gcolor.add(color.rgb(19, 0, 76))
    gcd.gcolor.add(color.rgb(47, 38, 76))
    gcd.gcolor.add(color.rgb(9, 0, 38))
    gcd.gcolor.add(color.rgb(23, 19, 38))
    gcd.gcolor.add(color.rgb(127, 0, 255))
    gcd.gcolor.add(color.rgb(191, 127, 255))
    gcd.gcolor.add(color.rgb(82, 0, 165))
    gcd.gcolor.add(color.rgb(124, 82, 165))
    gcd.gcolor.add(color.rgb(63, 0, 127))
    gcd.gcolor.add(color.rgb(95, 63, 127))
    gcd.gcolor.add(color.rgb(38, 0, 76))
    gcd.gcolor.add(color.rgb(57, 38, 76))
    gcd.gcolor.add(color.rgb(19, 0, 38))
    gcd.gcolor.add(color.rgb(28, 19, 38))
    gcd.gcolor.add(color.rgb(191, 0, 255))
    gcd.gcolor.add(color.rgb(223, 127, 255))
    gcd.gcolor.add(color.rgb(124, 0, 165))
    gcd.gcolor.add(color.rgb(145, 82, 165))
    gcd.gcolor.add(color.rgb(95, 0, 127))
    gcd.gcolor.add(color.rgb(111, 63, 127))
    gcd.gcolor.add(color.rgb(57, 0, 76))
    gcd.gcolor.add(color.rgb(66, 38, 76))
    gcd.gcolor.add(color.rgb(28, 0, 38))
    gcd.gcolor.add(color.rgb(33, 19, 38))
    gcd.gcolor.add(color.rgb(255, 0, 255))
    gcd.gcolor.add(color.rgb(255, 127, 255))
    gcd.gcolor.add(color.rgb(165, 0, 165))
    gcd.gcolor.add(color.rgb(165, 82, 165))
    gcd.gcolor.add(color.rgb(127, 0, 127))
    gcd.gcolor.add(color.rgb(127, 63, 127))
    gcd.gcolor.add(color.rgb(76, 0, 76))
    gcd.gcolor.add(color.rgb(76, 38, 76))
    gcd.gcolor.add(color.rgb(38, 0, 38))
    gcd.gcolor.add(color.rgb(38, 19, 38))
    gcd.gcolor.add(color.rgb(255, 0, 191))
    gcd.gcolor.add(color.rgb(255, 127, 223))
    gcd.gcolor.add(color.rgb(165, 0, 124))
    gcd.gcolor.add(color.rgb(165, 82, 145))
    gcd.gcolor.add(color.rgb(127, 0, 95))
    gcd.gcolor.add(color.rgb(127, 63, 111))
    gcd.gcolor.add(color.rgb(76, 0, 57))
    gcd.gcolor.add(color.rgb(76, 38, 66))
    gcd.gcolor.add(color.rgb(38, 0, 28))
    gcd.gcolor.add(color.rgb(38, 19, 33))
    gcd.gcolor.add(color.rgb(255, 0, 127))
    gcd.gcolor.add(color.rgb(255, 127, 191))
    gcd.gcolor.add(color.rgb(165, 0, 82))
    gcd.gcolor.add(color.rgb(165, 82, 124))
    gcd.gcolor.add(color.rgb(127, 0, 63))
    gcd.gcolor.add(color.rgb(127, 63, 95))
    gcd.gcolor.add(color.rgb(76, 0, 38))
    gcd.gcolor.add(color.rgb(76, 38, 57))
    gcd.gcolor.add(color.rgb(38, 0, 19))
    gcd.gcolor.add(color.rgb(38, 19, 28))
    gcd.gcolor.add(color.rgb(255, 0, 63))
    gcd.gcolor.add(color.rgb(255, 127, 159))
    gcd.gcolor.add(color.rgb(165, 0, 41))
    gcd.gcolor.add(color.rgb(165, 82, 103))
    gcd.gcolor.add(color.rgb(127, 0, 31))
    gcd.gcolor.add(color.rgb(127, 63, 79))
    gcd.gcolor.add(color.rgb(76, 0, 19))
    gcd.gcolor.add(color.rgb(76, 38, 47))
    gcd.gcolor.add(color.rgb(38, 0, 9))
    gcd.gcolor.add(color.rgb(38, 19, 23))
    gcd.gcolor.add(color.rgb(0, 0, 0))
    gcd.gcolor.add(color.rgb(51, 51, 51))
    gcd.gcolor.add(color.rgb(102, 102, 102))
    gcd.gcolor.add(color.rgb(153, 153, 153))
    gcd.gcolor.add(color.rgb(204, 204, 204))
    gcd.gcolor.add(color.rgb(255, 255, 255))
    gcd.gcolor.add(color.rgb(255, 255, 255))  'By Layer
    gcd.gcolor.add(color.rgb(255, 255, 255))  'By Block
    gcd.gcolor.add(color.rgb(255, 255, 255))  'By Object?

    ' corrijo los colores que no se ven contra el fondo
    gcd.gcolor[0] = gcd.flgWhiteAndBlack
    gcd.gcolor[7] = gcd.flgWhiteAndBlack
    gcd.gcolor[250] = gcd.flgWhiteAndBlack
    gcd.gcolor[255] = gcd.flgWhiteAndBlack
    gcd.gcolor[256] = gcd.flgWhiteAndBlack
    gcd.gcolor[257] = gcd.flgWhiteAndBlack
    gcd.gcolor[258] = gcd.flgWhiteAndBlack

End

Public Sub InitMenus()

    Dim mColors As New Menu(fMain)
    Dim mItem As Menu
    Dim imgCirculito As Image
    Dim i, iColor As Integer
    Dim msubItem As Menu

    mColors.Name = "mColores"

    '============ByLayer======================
    i = 256
    iColor = gcd.gColor[i]
    mItem = New Menu(mColors)
    mItem.Text = "ByLayer"
    mItem.Action = "Color_256" ' & CStr(i)
    mItem.Picture = paintPlus.picCirculito(8, gcd.gColor[256], Color.ButtonForeground)

    '============Byblock======================
    i = 257
    mItem = New Menu(mColors)
    mItem.Text = "ByBlock"
    mItem.Action = "Color_257" ' & CStr(i)
    mItem.Picture = paintPlus.picCirculito(8, gcd.gColor[i], Color.ButtonForeground)

    '============separator======================
    mItem = New Menu(mColors)
    mItem.Text = ""
    mItem.Action = "" ' & CStr(i)

    For i = 0 To 10 'gcd.gColor.Max
        mItem = New Menu(mColors)
        mItem.Text = "Color " & CStr(i)
        mItem.Action = "Color_" & CStr(i)
        mItem.Picture = paintPlus.picCirculito(8, gcd.gColor[i], Color.ButtonForeground)

    Next
    '============separator======================
    mItem = New Menu(mColors)
    mItem.Text = ""
    mItem.Action = "" ' & CStr(i)

    '============more colors======================
    mItem = New Menu(mColors)
    mItem.Text = ("more colors...")
    mItem.Action = "more_colors" ' & CStr(i)

    fMain.mbtcolors.text = mColors.Children[0].Text
    fMain.mbtColors.Picture = mColors.Children[0].Picture
    fMain.mbtColors.Menu = mColors.Name
    fMain.mbtColors.Tag = mColors.Children[0].Tag
    fMain.mbtColors.Action = "Color_256"

    '==============================Blocks==================================

    Dim menBlocks As New Menu(fmain)
    clsBlocks.mPopUp = menBlocks

    menBlocks.Name = "mBlocks"
    mItem = New Menu(menBlocks)
    mItem.Text = "Scale..."
    mItem.Action = "menu_blocks_scale"

    mItem = New Menu(menBlocks)
    mItem.Text = "Rotation"

    Dim mBubItem As Menu
    msubItem = New Menu(mItem)
    msubItem.Text = "0*"
    msubItem.Action = "menu_blocks_rot_0"

    msubItem = New Menu(mItem)
    msubItem.Text = "90*"
    msubItem.Action = "menu_blocks_rot_90"

    msubItem = New Menu(mItem)
    msubItem.Text = "180*"
    msubItem.Action = "menu_blocks_rot_180"

    msubItem = New Menu(mItem)
    msubItem.Text = "270*"
    msubItem.Action = "menu_blocks_rot_270"

    msubItem = New Menu(mItem)
    msubItem.Text = ""  ' separator

    msubItem = New Menu(mItem)
    msubItem.Text = "Other..."
    msubItem.Action = "menu_blocks_rot_other"

    mItem = New Menu(menBlocks)
    mItem.Checked = False
    mItem.Text = "Mirrored"
    mItem.Action = "menu_blocks_mirrored"

End
